CREATE DATABASE WORLD_LAYOFF;
SHOW DATABASES;
USE WORLD_LAYOFF;
SELECT * FROM LAYOFFS;
  
  
   -- REMOVE DUPLICATES
   -- STANDARDIZE THE DATA
   -- NULL VALUES OR BLANK VALUES
   -- REMOVE ANY COLUMNS
  
  -- first thing we want to do is create a staging table. This is the one we will work in and clean the data. We want a table with the raw data in case something happens
CREATE TABLE LAYOFFS_STAGING
LIKE LAYOFFS;

SELECT * FROM LAYOFFS_STAGING;


INSERT LAYOFFS_STAGING
SELECT * FROM LAYOFFS;

-- 1. Remove Duplicates

# First let's check for duplicates



SELECT *,
ROW_NUMBER() OVER(
PARTITION BY COMPANY,INDUSTRY,TOTAL_LAID_OFF,PERCENTAGE_LAID_OFF,'DATE') AS ROW_NUM 
FROM LAYOFFS_STAGING;

WITH DUPLICATE_CTE AS
(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY COMPANY,LOCATION,INDUSTRY,TOTAL_LAID_OFF,PERCENTAGE_LAID_OFF,'DATE',STAGE,COUNTRY,FUNDS_RAISED_MILLIONS) AS ROW_NUM 
FROM LAYOFFS_STAGING
)

SELECT * FROM DUPLICATE_CTE
WHERE ROW_NUM>1;

SELECT * FROM LAYOFFS_STAGING
WHERE COMPANY='CASPER';

DELETE  FROM DUPLICATE_CTE
WHERE ROW_NUM>1;




CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `ROW_NUM` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

SELECT * FROM LAYOFFS_STAGING2;
SELECT *
FROM LAYOFFS_STAGING2
WHERE ROW_NUM>1;

INSERT INTO LAYOFFS_STAGING2
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY COMPANY,LOCATION,INDUSTRY,TOTAL_LAID_OFF,PERCENTAGE_LAID_OFF,'DATE',STAGE,COUNTRY,FUNDS_RAISED_MILLIONS) AS ROW_NUM 
FROM LAYOFFS_STAGING;

DELETE 
FROM LAYOFFS_STAGING2
WHERE ROW_NUM>1;
SELECT *
FROM LAYOFFS_STAGING2
WHERE ROW_NUM>1;

SELECT *
FROM LAYOFFS_STAGING2;

-- STANDARDIZING DATA

SELECT COMPANY,(TRIM(COMPANY))                           -- IT TRIM THE WHITE SPACES IN COMPANY COLUMN
FROM LAYOFFS_STAGING2;

SELECT DISTINCT INDUSTRY                                 -- IT GIVES DISTINCT INDUSTRY
FROM LAYOFFS_STAGING2
ORDER BY 1;

SELECT *
FROM LAYOFFS_STAGING2
WHERE INDUSTRY LIKE'CRYPTO%';

UPDATE LAYOFFS_STAGING2
SET INDUSTRY ='CRYPTO'                               -- IT CHANGES THE NAME 
WHERE INDUSTRY LIKE 'CRYPTO%';                       -- INDUSTRY

SELECT DISTINCT COUNTRY             -- IT GIVES DISTINCT COUNTRY NAMES
FROM LAYOFFS_STAGING2               -- COUNTRY
ORDER BY 1;
USE WORLD_LAYOFF;
SHOW DATABASES;

SELECT *                      -- IT CHANGES DUPLICATE VALUES TO NORMAL VALUES
FROM LAYOFFS_STAGING2
WHERE COUNTRY LIKE "UNITED STATES%"
ORDER BY 1;

SELECT DISTINCT COUNTRY,TRIM(COUNTRY)           -- IN UNITED STATES THE . IS NOT GONE
FROM LAYOFFS_STAGING2
ORDER BY 1;

SELECT DISTINCT COUNTRY,TRIM(TRAILING '.' FROM COUNTRY)    -- TRAILING WHILE REMOVE THE . FROM UNITED STATES
FROM LAYOFFS_STAGING2
ORDER BY 1;

UPDATE LAYOFFS_STAGING2
SET COUNTRY =TRIM(TRAILING '.' FROM COUNTRY)
WHERE COUNTRY LIKE 'UNITED STATES%';

SELECT DISTINCT(COUNTRY) FROM LAYOFFS_STAGING2;

SELECT *
FROM LAYOFFS_STAGING2;

SELECT DATE FROM LAYOFFS_STAGING2;

SELECT `date`,
STR_TO_DATE(`date`, '%m/%d/%Y')                              -- it converts text to date 
FROM LAYOFFS_STAGING2;

UPDATE LAYOFFS_STAGING2                              -- UPDATE THE DATE TEXT TO DATE FORMAT
SET `date` =STR_TO_DATE(`date`, '%m/%d/%Y');

ALTER TABLE LAYOFFS_STAGING2                         -- CHANGES TO TEXT TO DATE 
MODIFY COLUMN `date` DATE;

SELECT *
FROM LAYOFFS_STAGING2                                  -- BOTH DATA IS NULL THAT IS USELESS
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL;

SELECT * 
FROM LAYOFFS_STAGING2
WHERE INDUSTRY IS NULL
OR INDUSTRY ='';   

UPDATE LAYOFFS_STAGING2                       -- BLANKS CHANGES TO NULL VALUES
SET INDUSTRY = null
WHERE INDUSTRY ='';

SELECT *
FROM LAYOFFS_STAGING2                             -- IT CHANGES INDUSTRY NAME TO BLANK 
WHERE COMPANY ='AIRBNB';

SELECT T1.INDUSTRY,T2.INDUSTRY
 FROM LAYOFFS_STAGING2 T1                            -- IT GIVES DUPLICATES VALUES IN THAT
JOIN LAYOFFS_STAGING2 T2
     ON T1.COMPANY = T2.COMPANY
WHERE (T1.INDUSTRY IS NULL OR T1.INDUSTRY ='')
AND T2.INDUSTRY IS NOT NULL;    

UPDATE  LAYOFFS_STAGING2 T1
JOIN LAYOFFS_STAGING2 T2
    ON T1.COMPANY =T2.COMPANY
SET T1.INDUSTRY = T2.INDUSTRY
WHERE T1.INDUSTRY IS NULL 
AND T2.INDUSTRY IS NOT NULL;

SELECT *
FROM LAYOFFS_STAGING2                             -- IT CHANGES INDUSTRY NAME TO BLANK 
WHERE COMPANY LIKE 'BALLY%';

SELECT *
FROM LAYOFFS_STAGING2   ; 

SELECT * 
FROM LAYOFFS_STAGING2
WHERE INDUSTRY IS NULL
OR INDUSTRY ='';  

SELECT *
FROM LAYOFFS_STAGING2                                  -- BOTH DATA IS NULL THAT IS USELESS
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL;

DELETE
FROM LAYOFFS_STAGING2                                  -- BOTH DATA IS NULL THAT IS USELESS THEN DELETE THE DATA
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL;
     
     
     SELECT *
FROM LAYOFFS_STAGING2 ;

ALTER TABLE LAYOFFS_STAGING2
DROP COLUMN ROW_NUM;

-- FINAL DATA